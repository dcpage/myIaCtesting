AWSTemplateFormatVersion: "2010-09-09"
Description: Core template. Contains VPC, Public Subnets and routing
Parameters:
  VpcCidr:
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  Environment:
    Type: String
    AllowedValues: ['prod', 'test']

Conditions:
  ProdEnv: !Equals [ !Ref Environment, "prod" ]

Resources:

  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref 'VpcCidr'
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        - Key: 'Name'
          Value: !Join ['-', [ !Ref 'Environment', 'vpc' ]]
        - Key: 'Env'
          Value: !Ref 'Environment'

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Select [ 0, !Cidr [ !Ref VpcCidr, 12, 8 ] ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: True
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref "AWS::Region"
      Tags:
        - Key: 'Name'
          Value: !Join ['-', [ !Ref 'Environment', 'public-subnet01' ]]
        - Key: 'Env'
          Value: !Ref 'Environment'

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Select [ 1, !Cidr [ !Ref VpcCidr, 12, 8 ] ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: True
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref "AWS::Region"
      Tags:
        - Key: 'Name'
          Value: !Join ['-', [ !Ref 'Environment', 'public-subnet02' ]]
        - Key: 'Env'
          Value: !Ref 'Environment'

  Igw:
    Type: "AWS::EC2::InternetGateway"

  IgwToVpcAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc

  PublicRoute:
    DependsOn: IgwToVpcAttachment
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw

  PubSubRtAttachment1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PubSubRtAttachment2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

Outputs:

  VpcId:
    Value: !Ref Vpc
    Export:
      Name: VpcId

  PublicSubnet1Id:
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1Id

  PublicSubnet2Id:
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2Id
